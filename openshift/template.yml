kind: "Template"
apiVersion: "v1"
labels:
  template-name: springbootembedded-build
  template-version: 1.0.0
metadata:
  name: "springbootembedded-build"
  annotations:
    description: "Template para proyectos Spring Boot con servidor embebido"
    tags: "netty,spring,boot,cloud,java"
    iconClass: "icon-tomcat"
objects:
  - kind: "ImageStream"
    apiVersion: "v1"
    metadata:
      name: "${APPLICATION_NAME}-${APPLICATION_VERSION}"
      creationTimestamp: null
      labels:
        app: "${APPLICATION_NAME}"
        version: ${APPLICATION_VERSION}
    spec:
      tags:
        - name: "latest"
  - kind: "BuildConfig"
    apiVersion: "v1"
    metadata:
      name: "${APPLICATION_NAME}-${APPLICATION_VERSION}"
      creationTimestamp:
      labels:
        app: "${APPLICATION_NAME}"
        version: ${APPLICATION_VERSION}
    spec:
      source:
        type: "Git"
        git:
          uri: "${REPOSITORY_URL}"
        contextDir: "${REPOSITORY_PATH}"
      strategy:
        type: Docker
        dockerStrategy:
          forcePull: true
          noCache: true
          env:
            - name: "MIN_MEM"
              value: "${MIN_MEM}"
            - name: "MAX_MEM"
              value: "${MAX_MEM}"
      output:
        to:
          kind: "ImageStreamTag"
          name: "${APPLICATION_NAME}-${APPLICATION_VERSION}:latest"
      resources: {}
    status:
      lastVersion: 0
  - kind: "DeploymentConfig"
    apiVersion: "v1"
    metadata:
      name: "${APPLICATION_NAME}-${APPLICATION_VERSION}"
      creationTimestamp:
      labels:
        app: "${APPLICATION_NAME}"
        version: ${APPLICATION_VERSION}
    spec:
      strategy:
        type: "Rolling"
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 180
          maxUnavailable: "25%"
          maxSurge: "25%"
        resources: {}
      triggers:
        - type: "ImageChange"
          imageChangeParams:
            automatic: true
            containerNames:
              - "${APPLICATION_NAME}-${APPLICATION_VERSION}"
            from:
              kind: "ImageStreamTag"
              name: "${APPLICATION_NAME}-${APPLICATION_VERSION}:latest"
      replicas: 1
      selector:
        app: "${APPLICATION_NAME}"
        version: ${APPLICATION_VERSION}
      template:
        metadata:
          name: "${APPLICATION_NAME}-${APPLICATION_VERSION}"
          creationTimestamp:
          labels:
            app: "${APPLICATION_NAME}"
            version: ${APPLICATION_VERSION}
        spec:
          containers:
            - name: "${APPLICATION_NAME}-${APPLICATION_VERSION}"
              image: "${APPLICATION_NAME}-${APPLICATION_VERSION}:latest"
              ports:
                - name: "jolokia"
                  containerPort: 8778
                  protocol: TCP
                - name: http
                  containerPort: 8080
                  protocol: TCP
              resources: {}
              imagePullPolicy: "Always"
              readinessProbe:
                exec:
                  command:
                  - wget
                  - '-qO-'
                  - 'http://localhost:8080/actuator/info'
                initialDelaySeconds: 5
                timeoutSeconds: 2
                periodSeconds: 30
                successThreshold: 1
                failureThreshold: 10
              livenessProbe:
                exec:
                  command:
                  - wget
                  - '-qO-'
                  - 'http://localhost:8080/actuator/health'
                initialDelaySeconds: 20
                timeoutSeconds: 2
                periodSeconds: 30
                successThreshold: 1
                failureThreshold: 5
          restartPolicy: "Always"
          terminationGracePeriodSeconds: 30
          dnsPolicy: "ClusterFirst"
          securityContext: {}
    status: {}
  - kind: "Service"
    apiVersion: "v1"
    metadata:
      name: "${APPLICATION_NAME}"
      creationTimestamp:
      labels:
        app: "${APPLICATION_NAME}"
        version: ${APPLICATION_VERSION}
    spec:
      ports:
        - name: "tcp-8080"
          protocol: "TCP"
          port: 8080
          targetPort: 8080
      selector:
        app: "${APPLICATION_NAME}"
        version: ${APPLICATION_VERSION}
parameters:
- name: "APPLICATION_NAME"
  description: "Name of the application"
  value: "xxx-yyy"
  required: true
- name: "APPLICATION_VERSION"
  description: "Version of the application"
  value: ""
  required: true
- name: "REPOSITORY_URL"
  description: "The Git URL of the repository"
  value: ""
  required: true
- name: "REPOSITORY_PATH"
  description: "Path to Dockerfile on Git repository"
  value: './'
  required: true
- name: "MIN_MEM"
  description: "Memoria minima para el pod"
  value: "400m"
  required: false
- name: "MAX_MEM"
  description: "Memoria maxima para el pod"
  value: "600m"
  required: false
